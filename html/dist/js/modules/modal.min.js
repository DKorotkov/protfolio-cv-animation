import KEY from"./keys.min.js";function modal(t){const s=document.querySelector(t.activeButton),e=document.querySelector(t.modal),o=document.querySelector(t.closeButton),n=document.querySelector(t.overlay),a=t.isRoving||!1;var c='button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])';const i=e.querySelectorAll(c)[0],l=e.querySelectorAll(c),u=l[l.length-1],r=e.querySelector('[data-selectFirst="true"]');let d=0;function v(){s.classList.contains(t.activeButton.slice(1)+t.activeClass)?f():(s.addEventListener("focusout",E),e.addEventListener("keydown",m),l.forEach(e=>{e.addEventListener("focusout",E)}),o&&o.addEventListener("click",f),s.classList.add(t.activeButton.slice(1)+t.activeClass),s.setAttribute("aria-expanded","true"),e.setAttribute("tabindex","-1"),e.classList.add(t.modal.slice(1)+t.activeClass),n&&n.classList.add(t.overlay.slice(1)+t.activeClass),setTimeout(function(){(r||i).focus()},100))}function m(e){e.keyCode===KEY.ESC&&f(),e.keyCode!==KEY.ENTER&&e.keyCode!==KEY.SPACE||s.classList.contains(t.activeButton.slice(1)+t.activeClass)||v(),e.keyCode===KEY.TAB&&(a?e.shiftKey?document.activeElement===i&&(u.focus(),e.preventDefault()):document.activeElement===u&&(i.focus(),e.preventDefault()):r&&(d++,d===l.length&&(f(),d=0),document.activeElement===u&&(i.focus(),e.preventDefault())))}function f(){s.removeEventListener("focusout",E),e.removeEventListener("keydown",m),l.forEach(e=>{e.removeEventListener("focusout",E)}),o&&o.removeEventListener("click",f),s.classList.remove(t.activeButton.slice(1)+t.activeClass),s.setAttribute("aria-expanded","false"),e.setAttribute("tabindex",""),e.classList.remove(t.modal.slice(1)+t.activeClass),n&&n.classList.remove(t.overlay.slice(1)+t.activeClass),setTimeout(function(){s.focus()},100)}function E(){setTimeout(function(){document.activeElement.closest(t.modal)||f()},1)}s.addEventListener("mousedown",v),s.addEventListener("keydown",m),s.setAttribute("aria-expanded","false")}export default modal;
//# sourceMappingURL=data:application/json;charset=utf8;base64,
